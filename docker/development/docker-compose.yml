version: '3.8'

services:
  api-backend:
    build:
      context: ../..
      dockerfile: docker/development/Dockerfile
    container_name: ${COMPOSE_PROJECT_NAME}_api-backend
    volumes: 
      - ../../:/home/node/app
    ports:
      - ${APP_PORT}:${APP_PORT}
    env_file:
      - ../../.env
    networks:
      lan:
        ipv4_address: ${COMPOSE_LAN_API_BACKEND_IP}
    depends_on: 
      - api-db
      - api-static
    links: 
      - api-db
      - api-static
  api-db:
    container_name: ${COMPOSE_PROJECT_NAME}_api-db
    image: mongo:4
    restart: always
    ports:
      - ${API_MONGODB_PORT}:${API_MONGODB_PORT}
    environment:
      - MONGO_INITDB_DATABASE=${API_MONGODB_DATABASE}
      - MONGO_INITDB_ROOT_USERNAME=${API_MONGODB_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${API_MONGODB_PASSWORD}
    volumes:
      - ../../${COMPOSE_API_DB_VOLUMES_BASE_PATH}:/data/db
    networks:
      lan:
        ipv4_address: ${COMPOSE_LAN_API_DB_IP}
    logging:
      driver: none
  api-static:
    container_name: ${COMPOSE_PROJECT_NAME}_api-static
    image: docker.io/bitnami/minio:2021
    volumes:
      - ../../${COMPOSE_API_STATIC_VOLUMES_BASE_PATH}:/data
    ports:
      - ${COMPOSE_API_STATIC_PORT}:${COMPOSE_API_STATIC_PORT}
    environment:
      MINIO_ACCESS_KEY: ${API_S3_ACCESS_KEY}
      MINIO_SECRET_KEY: ${API_S3_ACCESS_SECRET_KEY}
      MINIO_DEFAULT_BUCKETS: default,${API_S3_BUCKET}
    networks:
      lan:
        ipv4_address: ${COMPOSE_LAN_API_STATIC_IP}
    healthcheck:
      test:
        ['CMD', 'curl', '-f', 'http://localhost:$$COMPOSE_API_STATIC_PORT/minio/health/live']
      interval: 30s
      timeout: 20s
      retries: 3
    logging:
      driver: none
networks:
  lan:
    driver: bridge
    ipam:
      driver: default
      config:
      - subnet: ${COMPOSE_LAN_SUBNET}
